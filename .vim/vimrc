"             _         _         _
"     __   __(_)__   __(_)__   __(_)
"     \ \ / /| |\ \ / /| |\ \ / /| |
"      \ V / | | \ V / | | \ V / | |
"       \_/  |_|  \_/  |_|  \_/  |_|
"
"    The Editor of the Beast - IMproved


" Plugin management (I use Vundle) {{{1
filetype off
set runtimepath+=~/.vim/bundle/Vundle.vim

call vundle#begin()
" Plugin sources {{{2
Plugin 'salsifis/vim-transpose'
Plugin 'gmarik/Vundle.vim'
Plugin 'jceb/vim-orgmode'
Plugin 'lodifice/guillotine.vim'
Plugin 'lodifice/omnitags.vim'
Plugin 'lodifice/panzer.vim'
Plugin 'lodifice/pathfinder.vim'
"Plugin 'michalbachowski/vim-wombat256mod'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-speeddating'
Plugin 'lodifice/wombat256.vim'
Plugin 'miyakogi/seiya.vim'
Plugin 'lodifice/mzview.vim'
Plugin 'dhruvasagar/vim-table-mode'
Plugin 'junegunn/fzf'

call vundle#end()

filetype plugin indent on
syntax on

" General config {{{1
" Disable swapping {{{2
set nobackup
set nowritebackup
set noswapfile

" Sanity defaults {{{2
set clipboard=      " Welches Rindvieh hat `autoselect` als Default eingestellt?

" Tabs and spaces {{{2
set expandtab       " expand tabs to spaces
set softtabstop=4   " each tab is 4 spaces
set shiftwidth=4    " use 4 spaces for each indent level
set shiftround      " orientate indent on shiftwidth
"
" Search {{{2
set hlsearch        " always highlight search results
set incsearch       " search incrementally
set ignorecase      " ignore case when searching
set smartcase       " ignore ignorecase when uppercase letter in search string
"
" History & undo levels {{{2
set history=777     " command line history
set undolevels=777  " normal mode history

" Buffer management {{{2
set hidden          " Make it possible to switch buffers without writing

" Command line completion {{{2
set wildmenu                    " Show possible completions
set wildmode=longest:full,full  " Make completion behave like in zsh

" Visuals {{{1
" Orientation {{{2
set number              " enable line numbers (current line absolute)
set relativenumber      " use relative line numbers
set ruler               " always show position in file
set scrolloff=5         " number of lines always below/above cursor
set wrap linebreak      " wrap on word bounds
set breakindent         " indent wrapped lines as previous line
set showcmd             " show currently pending command string
set cursorline          " highlight current line

" Color scheme {{{2
set t_Co=256
let &t_Cs = "\e[4:3m"
let &t_Ce = "\e[4:0m"
let &t_AU = "\e[58:5:%dm"
let &t_SI = "\e[5 q"
let &t_SR = "\e[3 q"
let &t_EI = "\e[1 q"
set ttimeout
set ttimeoutlen=100
color wombat256mod

" Font {{{2
set guifont="Fantasque Sans Mono 12"

" Mappings {{{1
" Remove search highlighting
nnoremap <Esc> :nohlsearch<cr>
" Filetype detection
nnoremap <leader>f :filetype detect<cr>
" Sanitize comments in HTML e-mails
nnoremap <leader>c <esc>:'<,'>s/^> //<cr>:'<,'>!w3m -T text/html -I UTF-8<cr>

" Plugin configuration {{{1
" Guillotine {{{2
augroup guillotine
    autocmd!
    autocmd BufEnter * if exists(":ToggleHeaderSource") | execute "nmap <buffer> ga :ToggleHeaderSource<cr>" | endif
augroup END
" zettelkasten {{{2
let g:zettelkasten = "/home/richard/Dokumente/Zettelkasten/"
let g:indexzettel = "202307271045.md"

augroup diffmode
    autocmd!
    autocmd OptionSet diff let &cursorline=!v:option_new
    autocmd BufEnter * if !&diff | let &cursorline=1 |endif
augroup END
